#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <behaviors/led_bars.dtsi>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define MEDIA   4
#define WINNAV  5

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        
        // Missing inner column keys - left side (ffkb middle position 14: G)
        combo_left_inner_col {
            timeout-ms = <50>;
            key-positions = <4 14>;
            bindings = <&kp G>;
            layers = <DEFAULT>;
        };
        combo_left_inner_col_nav {
            timeout-ms = <50>;
            key-positions = <4 14>;
            bindings = <&kp END>;
            layers = <NAV>;
        };
        combo_left_inner_col_sym {
            timeout-ms = <50>;
            key-positions = <4 14>;
            bindings = <&kp LT>;
            layers = <SYM>;
        };
        combo_left_inner_col_func {
            timeout-ms = <50>;
            key-positions = <4 14>;
            bindings = <&kp LS(END)>;
            layers = <FUNC>;
        };
        combo_left_inner_col_media {
            timeout-ms = <50>;
            key-positions = <4 14>;
            bindings = <&bt_clr_led>;
            layers = <MEDIA>;
        };
        combo_left_inner_col_winnav {
            timeout-ms = <50>;
            key-positions = <4 14>;
            bindings = <&trans>;
            layers = <WINNAV>;
        };

        // Missing inner column keys - right side (ffkb middle position 15: M)
        combo_right_inner_col {
            timeout-ms = <50>;
            key-positions = <5 15>;
            bindings = <&kp M>;
            layers = <DEFAULT>;
        };
        combo_right_inner_col_nav {
            timeout-ms = <50>;
            key-positions = <5 15>;
            bindings = <&kp FSLH>;
            layers = <NAV>;
        };
        combo_right_inner_col_sym {
            timeout-ms = <50>;
            key-positions = <5 15>;
            bindings = <&kp GT>;
            layers = <SYM>;
        };
        combo_right_inner_col_func {
            timeout-ms = <50>;
            key-positions = <5 15>;
            bindings = <&kp K_VOL_UP>;
            layers = <FUNC>;
        };
        combo_right_inner_col_media {
            timeout-ms = <50>;
            key-positions = <5 15>;
            bindings = <&bt BT_CLR>;
            layers = <MEDIA>;
        };
        combo_right_inner_col_winnav {
            timeout-ms = <50>;
            key-positions = <5 15>;
            bindings = <&trans>;
            layers = <WINNAV>;
        };

        // Missing left thumb middle key (ffkb position 31: RET)
        combo_left_thumb {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&lt NAV RET>;
            layers = <DEFAULT>;
        };
        combo_left_thumb_nav {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&trans>;
            layers = <NAV>;
        };
        combo_left_thumb_sym {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp RET>;
            layers = <SYM>;
        };
        combo_left_thumb_func {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&trans>;
            layers = <FUNC>;
        };
        combo_left_thumb_media {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&trans>;
            layers = <MEDIA>;
        };
        combo_left_thumb_winnav {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&trans>;
            layers = <WINNAV>;
        };

        // Missing right thumb middle key (ffkb position 34: SPACE)
        combo_right_thumb {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&lt SYM SPACE>;
            layers = <DEFAULT>;
        };
        combo_right_thumb_nav {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp SPACE>;
            layers = <NAV>;
        };
        combo_right_thumb_sym {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&trans>;
            layers = <SYM>;
        };
        combo_right_thumb_func {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp SPACE>;
            layers = <FUNC>;
        };
        combo_right_thumb_media {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&trans>;
            layers = <MEDIA>;
        };
        combo_right_thumb_winnav {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&trans>;
            layers = <WINNAV>;
        };

        // Additional combo from original ffkb
        combo_undo {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LC(Z)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default";
            bindings = <
            &kp Q           &kp W           &kp F           &kp P           &kp B                                           &kp J           &kp L           &lt WINNAV U    &kp Y           &kp SEMI
            &hm LCTL A      &hm LGUI R      &hm LALT S      &hs LSHIFT T    &kp V                                           &kp K           &hs RSHIFT N    &hm RALT E      &hm RGUI I      &hm RCTL O
            &kp Z           &kp X           &kp C           &kp D                                                                           &kp H           &kp COMMA       &kp DOT         &kp FSLH
                                                            &kp DEL         &lt FUNC TAB                    &lt MEDIA BSPC  &kp SQT
            >;
        };

        nav_layer {
            display-name = "Nav";
            bindings = <
            &kp ESC         &kp PG_UP       &kp UP          &kp PG_DN       &trans                                          &kp ASTRK       &kp N7          &kp N8          &kp N9          &kp MINUS
            &kp HOME        &kp LEFT        &kp DOWN        &kp RIGHT       &trans                                          &kp EQUAL       &kp N4          &kp N5          &kp N6          &kp PLUS
            &trans          &trans          &trans          &trans                                                                          &kp N1          &kp N2          &kp N3          &kp N0
                                                                            &trans          &kp TAB         &kp BSPC        &kp DOT
            >;
        };

        sym_layer {
            display-name = "Sym";
            bindings = <
            &kp EXCL        &kp AT          &kp HASH        &kp DLLR        &kp PRCNT                                       &kp CARET       &kp AMPS        &kp ASTRK       &kp UNDER       &kp EQUAL
            &kp MINUS       &kp LBKT        &kp LBRC        &kp LPAR        &caps_word                                      &trans          &kp RPAR        &kp RBRC        &kp RBKT        &kp PLUS
            &kp CAPS        &kp GRAVE       &kp LC(LS(TAB)) &kp LC(LG(LEFT))                                                                &kp LC(LG(RIGHT)) &kp LC(TAB)   &trans          &kp BSLH
                                                                            &trans          &kp DEL         &kp BSPC        &trans
            >;
        };

        func_layer {
            display-name = "Func";
            bindings = <
            &bootloader     &kp LS(PG_UP)   &kp LS(UP)      &kp LS(PG_DN)   &trans                                          &kp C_PLAY_PAUSE &kp F7         &kp F8          &kp F9          &kp F10
            &kp LS(HOME)    &kp LS(LEFT)    &kp LS(DOWN)    &kp LS(RIGHT)   &kp C_MUTE                                      &kp K_VOL_DN    &kp F4          &kp F5          &kp F6          &kp F11
            &trans          &trans          &trans          &trans                                                                          &kp F1          &kp F2          &kp F3          &kp F12
                                                                            &trans          &trans          &trans          &trans
            >;
        };

        media_layer {
            display-name = "Media";
            bindings = <
            &trans          &trans          &trans          &trans          &trans                                          &ind_con        &bt BT_PRV      &bt BT_NXT         &trans        &ind_bat
            &bt_sel_led 0   &bt_sel_led 1   &bt_sel_led 2   &bt_sel_led 3   &trans                                          &ext_power EP_TOG &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3
            &trans          &trans          &trans          &trans                                                                          &ext_power EP_ON &ext_power EP_OFF &out OUT_USB  &out OUT_BLE
                                                                            &trans          &trans          &trans          &trans
            >;
        };

        winnav_layer {
            display-name = "WinNav";
            bindings = <
            &trans          &trans          &kp LG(UP)      &trans          &trans                                          &trans          &trans          &trans          &trans          &trans
            &trans          &kp LG(LEFT)    &kp LG(DOWN)    &kp LG(RIGHT)   &trans                                          &trans          &trans          &trans          &trans          &trans
            &trans          &trans          &trans          &trans                                                                          &trans          &trans          &trans          &trans
                                                                            &trans          &trans          &trans          &trans
            >;
        };
    };
};
